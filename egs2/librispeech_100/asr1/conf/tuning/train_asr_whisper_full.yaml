normalize: null

encoder: whisper
encoder_conf:
    whisper_model: tiny
    dropout_rate: 0.0
    use_specaug: true
    specaug_conf:
        apply_time_warp: true
        time_warp_window: 5
        time_warp_mode: bicubic
        apply_freq_mask: true
        freq_mask_width_range:
        - 0
        - 40
        num_freq_mask: 2
        apply_time_mask: true
        time_mask_width_ratio_range:
        - 0.
        - 0.12
        num_time_mask: 5


decoder: whisper
decoder_conf:
    whisper_model: tiny
    dropout_rate: 0.0
preprocessor: default
preprocessor_conf:
    whisper_language: "en"
    whisper_task: "transcribe"

model_conf:
    ctc_weight: 0.0
    lsm_weight: 0.1
    length_normalized_loss: false
    sym_sos: "<|startoftranscript|>"
    sym_eos: "<|endoftext|>"
    # do_pad_trim: true         # should be set when doing zero-shot inference

frontend: null
input_size: 1                   # to prevent build_model() from complaining

seed: 2022
log_interval: 100
num_att_plot: 0
num_workers: 4
sort_in_batch: descending       # how to sort data in making batch
sort_batch: descending          # how to sort created batches
batch_type: numel
batch_bins: 3000000            # good for single GPU w/ 40G mem
accum_grad: 16
max_epoch: 2
patience: none
init: none
best_model_criterion:
-   - valid
    - acc
    - max
keep_nbest_models: 3

use_amp: true
cudnn_deterministic: false
cudnn_benchmark: false

# LoRA finetune related
use_adapter: true
adapter: lora
adapter_conf:
    rank: 8
    alpha: 16
    dropout_rate: 0.05
    target_modules: ["decoder.decoders.blocks.0.attn.query","decoder.decoders.blocks.0.attn.key","decoder.decoders.blocks.0.attn.value","decoder.decoders.blocks.0.attn.out"
                    ,"decoder.decoders.blocks.1.attn.query","decoder.decoders.blocks.1.attn.key","decoder.decoders.blocks.1.attn.value","decoder.decoders.blocks.1.attn.out"
                    ,"decoder.decoders.blocks.2.attn.query","decoder.decoders.blocks.2.attn.key","decoder.decoders.blocks.2.attn.value","decoder.decoders.blocks.2.attn.out"
                    ,"decoder.decoders.blocks.3.attn.query","decoder.decoders.blocks.3.attn.key","decoder.decoders.blocks.3.attn.value","decoder.decoders.blocks.3.attn.out"
                    ,"decoder.decoders.blocks.4.attn.query","decoder.decoders.blocks.4.attn.key","decoder.decoders.blocks.4.attn.value","decoder.decoders.blocks.4.attn.out"
                    ,"decoder.decoders.blocks.5.attn.query","decoder.decoders.blocks.5.attn.key","decoder.decoders.blocks.5.attn.value","decoder.decoders.blocks.5.attn.out"
                    ,"decoder.decoders.blocks.6.attn.query","decoder.decoders.blocks.6.attn.key","decoder.decoders.blocks.6.attn.value","decoder.decoders.blocks.6.attn.out"
                    ,"decoder.decoders.blocks.7.attn.query","decoder.decoders.blocks.7.attn.key","decoder.decoders.blocks.7.attn.value","decoder.decoders.blocks.7.attn.out"
                    ,"decoder.decoders.blocks.8.attn.query","decoder.decoders.blocks.8.attn.key","decoder.decoders.blocks.8.attn.value","decoder.decoders.blocks.8.attn.out"
                    ,"decoder.decoders.blocks.9.attn.query","decoder.decoders.blocks.9.attn.key","decoder.decoders.blocks.9.attn.value","decoder.decoders.blocks.9.attn.out"
                    ,"decoder.decoders.blocks.10.attn.query","decoder.decoders.blocks.10.attn.key","decoder.decoders.blocks.10.attn.value","decoder.decoders.blocks.10.attn.out"
                    ,"decoder.decoders.blocks.11.attn.query","decoder.decoders.blocks.11.attn.key","decoder.decoders.blocks.11.attn.value","decoder.decoders.blocks.11.attn.out"
                    ,"decoder.decoders.blocks.12.attn.query","decoder.decoders.blocks.12.attn.key","decoder.decoders.blocks.12.attn.value","decoder.decoders.blocks.12.attn.out"
                    ,"decoder.decoders.blocks.13.attn.query","decoder.decoders.blocks.13.attn.key","decoder.decoders.blocks.13.attn.value","decoder.decoders.blocks.13.attn.out"
                    ,"decoder.decoders.blocks.14.attn.query","decoder.decoders.blocks.14.attn.key","decoder.decoders.blocks.14.attn.value","decoder.decoders.blocks.14.attn.out"
                    ,"decoder.decoders.blocks.15.attn.query","decoder.decoders.blocks.15.attn.key","decoder.decoders.blocks.15.attn.value","decoder.decoders.blocks.15.attn.out"
                    ,"decoder.decoders.blocks.16.attn.query","decoder.decoders.blocks.16.attn.key","decoder.decoders.blocks.16.attn.value","decoder.decoders.blocks.16.attn.out"
                    ,"decoder.decoders.blocks.17.attn.query","decoder.decoders.blocks.17.attn.key","decoder.decoders.blocks.17.attn.value","decoder.decoders.blocks.17.attn.out"
                    ,"decoder.decoders.blocks.18.attn.query","decoder.decoders.blocks.18.attn.key","decoder.decoders.blocks.18.attn.value","decoder.decoders.blocks.18.attn.out"
                    ,"decoder.decoders.blocks.19.attn.query","decoder.decoders.blocks.19.attn.key","decoder.decoders.blocks.19.attn.value","decoder.decoders.blocks.19.attn.out"
                    ,"decoder.decoders.blocks.20.attn.query","decoder.decoders.blocks.20.attn.key","decoder.decoders.blocks.20.attn.value","decoder.decoders.blocks.20.attn.out"
                    ,"decoder.decoders.blocks.21.attn.query","decoder.decoders.blocks.21.attn.key","decoder.decoders.blocks.21.attn.value","decoder.decoders.blocks.21.attn.out"
                    ,"decoder.decoders.blocks.22.attn.query","decoder.decoders.blocks.22.attn.key","decoder.decoders.blocks.22.attn.value","decoder.decoders.blocks.22.attn.out"
                    ,"decoder.decoders.blocks.23.attn.query","decoder.decoders.blocks.23.attn.key","decoder.decoders.blocks.23.attn.value","decoder.decoders.blocks.23.attn.out"
                    ,"decoder.decoders.blocks.24.attn.query","decoder.decoders.blocks.24.attn.key","decoder.decoders.blocks.24.attn.value","decoder.decoders.blocks.24.attn.out"
                    ,"decoder.decoders.blocks.25.attn.query","decoder.decoders.blocks.25.attn.key","decoder.decoders.blocks.25.attn.value","decoder.decoders.blocks.25.attn.out"
                    ,"decoder.decoders.blocks.26.attn.query","decoder.decoders.blocks.26.attn.key","decoder.decoders.blocks.26.attn.value","decoder.decoders.blocks.26.attn.out"
                    ,"decoder.decoders.blocks.27.attn.query","decoder.decoders.blocks.27.attn.key","decoder.decoders.blocks.27.attn.value","decoder.decoders.blocks.27.attn.out"
                    ,"decoder.decoders.blocks.28.attn.query","decoder.decoders.blocks.28.attn.key","decoder.decoders.blocks.28.attn.value","decoder.decoders.blocks.28.attn.out"
                    ,"decoder.decoders.blocks.29.attn.query","decoder.decoders.blocks.29.attn.key","decoder.decoders.blocks.29.attn.value","decoder.decoders.blocks.29.attn.out"
                    ,"decoder.decoders.blocks.30.attn.query","decoder.decoders.blocks.30.attn.key","decoder.decoders.blocks.30.attn.value","decoder.decoders.blocks.30.attn.out"
                    ,"decoder.decoders.blocks.31.attn.query","decoder.decoders.blocks.31.attn.key","decoder.decoders.blocks.31.attn.value","decoder.decoders.blocks.31.attn.out"] # only decoder self-attention

unused_parameters: true
freeze_param: ["encoder","decoder"]

optim: adamw
grad_clip: 1.0
optim_conf:
    lr: 5.0e-04
    weight_decay: 0.01
    betas:
    - 0.9
    - 0.99
    eps: 1.0e-06
scheduler: warmuplr
scheduler_conf:
    warmup_steps: 1500